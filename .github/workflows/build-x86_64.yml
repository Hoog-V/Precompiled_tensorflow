name: build-x86_64
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4.1.1
      - name: Install prerequisite packages (Bazel & zip)
        run: sudo apt install apt-transport-https curl gnupg -y && curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor >bazel-archive-keyring.gpg && sudo mv bazel-archive-keyring.gpg /usr/share/keyrings && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list && sudo apt update && sudo apt-get -y install zip bazel-6.5.0
      - name: Clone the tensorflow library & checkout to latest tag
        run: git clone https://github.com/tensorflow/tensorflow && cd tensorflow && git fetch --tags && tag=$(git describe --tags `git rev-list --tags --max-count=1`) && git checkout $tag && echo "$tag" > ../tag.txt
      - name: Build the tensorflow lite library using Bazel
        working-directory: ./tensorflow
        run: LD_BIND_NOW=1 bazel build //tensorflow/lite:libtensorflowlite.so -c opt --copt=-mavx
      - name: Assemble package
        working-directory: ./tensorflow
        run: mkdir -p ../package/lib ../package/inc/tensorflow/lite
      - name: Copy include files from flatbuffers into new package
        working-directory: ./tensorflow
        run: cp -r bazel-tensorflow/external/flatbuffers/include/* ../package/inc
      - name: Copy include files from tensorflow lite into new package
        working-directory: ./tensorflow
        run: cp -r tensorflow/lite/* ../package/inc/tensorflow/lite
      - name: Copy dynamic library file (.so) from bazel build dir to new package
        working-directory: ./tensorflow
        run: cp bazel-out/k8-opt/bin/tensorflow/lite/libtensorflowlite.so ../package/lib/
      - name: Copy template CMakeLists.txt to new package
        run: cp cmake/CMakeLists.txt package/
      - name: Remove other language bindings/examples/docs from the include directory
        run: rm -r package/inc/tensorflow/lite/{testing,java,ios,objc,python,tools,swift,examples}
      - name: Strip the tensorflow lite include dir (so that it only contains header files)
        run: find package/inc/tensorflow -type f ! -name "*.h" ! -name "*.hpp" -delete
      - name: Remove empty folders
        run: find package/inc/tensorflow -type d -empty -delete
      - name: Zip it up
        run: cd package && zip -r ../tensorflow_precompiled_generic_x86_64.zip * && cd ..
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload $(cat tag.txt) tensorflow_precompiled_generic_x86_64.zip
